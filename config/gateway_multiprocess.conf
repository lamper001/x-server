# X-Server 多进程版本配置文件
# 基于nginx架构的高性能Web服务器配置

# 全局配置
worker_processes auto;              # Worker进程数量，auto表示自动检测CPU核心数
worker_connections 10000;           # 每个Worker最大连接数
worker_rlimit_nofile 65535;         # 文件描述符限制

listen_port 9001;  # 监听端口

# 日志配置
log_path logs/         # 日志文件路径
log_daily 1;                        # 按日分割日志文件
log_level 1;                        # 日志级别：0=DEBUG, 1=INFO, 2=WARN, 3=ERROR

# 路由配置
# 格式：route <类型> <路径前缀> <目标> [认证类型] [字符集]
# 类型：static（静态文件）, proxy（代理）
# 认证类型：none（无认证）, oauth（OAuth认证）


# API代理路由（需要OAuth认证）
route proxy /api/v1/ 127.0.0.1:3001 oauth UTF-8
route proxy /api/v2/ 127.0.0.1:3002 none UTF-8

# 管理接口代理（需要OAuth认证）
route proxy /admin/ 127.0.0.1:3003 oauth UTF-8

# 公共API代理（无需认证）
route proxy /public/ 127.0.0.1:3004 none UTF-8

# WebSocket代理
route proxy /ws/ 127.0.0.1:3005 none UTF-8

# 健康检查接口
route proxy /health 127.0.0.1:3006 none UTF-8

# 默认路由（处理所有未匹配的请求）
route static / ./public/ none UTF-8

# 性能优化建议：
# 1. worker_processes 设置为CPU核心数
# 2. worker_connections 根据内存和负载调整
# 3. 静态文件路由放在前面，提高匹配效率
# 4. 合理设置超时时间，避免连接堆积
# 5. 根据实际需求调整缓冲区大小

# 安全建议：
# 1. 敏感接口使用OAuth认证
# 2. 定期检查日志文件
# 3. 限制客户端请求体大小
# 4. 设置合理的超时时间

# 监控建议：
# 1. 监控Worker进程状态
# 2. 监控连接数和请求处理时间
# 3. 监控内存和CPU使用率
# 4. 设置日志轮转，避免日志文件过大